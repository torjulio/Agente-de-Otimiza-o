version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: agente_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: agente_otimizacao
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - agente_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d agente_otimizacao"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: agente_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agente_network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  agente:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agente_otimizacao
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: agente_otimizacao
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ENVIRONMENT: development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - agente_network
    volumes:
      - .:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  agente_network:
    driver: bridge

